{
	"exclude": ["migrateBoosterPasses/*"],
	"compilerOptions": {
		"resolveJsonModule": true,
		"experimentalDecorators": true,
		// "incremental": true,                /* Enable incremental compilation */
		"target": "es2020" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019' or 'ESNEXT'. */,
		"module": "commonjs" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */,
		"lib": [
			"es2020"
		] /* Specify library files to be included in the compilation. */,
		// "allowJs": true,                    /* Allow javascript files to be compiled. */
		// "checkJs": true,                    /* Report errors in .js files. */
		// "jsx": "preserve",                  /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
		// "declaration": true,                /* Generates corresponding '.d.ts' file. */
		// "declarationMap": true,             /* Generates a sourcemap for each corresponding '.d.ts' file. */
		// "sourceMap": true,                  /* Generates corresponding '.map' file. */
		// "outFile": "./",                    /* Concatenate and emit output to single file. */
		"outDir": "./dist" /* Redirect output structure to the directory. */,
		"rootDir": "./src" /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */,
		"strict": true /* Enable all strict type-checking options. */,
		"noImplicitThis": true /* Raise error on 'this' expressions with an implied 'any' type. */,
		// "alwaysStrict": true,               /* Parse in strict mode and emit "use strict" for each source file. */
		"noUnusedLocals": true /* Report errors on unused locals. */,
		"noUnusedParameters": true /* Report errors on unused parameters. */,
		"noFallthroughCasesInSwitch": true /* Report errors for fallthrough cases in switch statement. */,
		"esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
		"emitDecoratorMetadata": true, /* Enables experimental support for emitting type metadata for decorators. */
		"skipLibCheck": true
	}
}
